

Native views are created and manipulated by subclasses of RCTViewManager.
These subclasses are similar in function to view controllers,
but are essentially singletons - only one instance of each is created 
by the bridge. They vend native views to the RCTUIManager,
which delegates back to them to set and update the properties of the views as necessary.
The RCTViewManagers are also typically the delegates for the views, sending events back to JavaScript via the bridge.

Vending a view is simple:
    Create the basic subclass.
    Add the RCT_EXPORT_MODULE() marker macro.
    Implement the -(UIView *)view method

''' oc
// RCTMapManager.m
#import <MapKit/MapKit.h>

#import "RCTViewManager.h"

@interface RCTMapManager : RCTViewManager
@end

@implementation RCTMapManager

RCT_EXPORT_MODULE()

- (UIView *)view
{
    return [[MKMapView alloc] init];
}

@end
'''

''' js 
// MapView.js

var { requireNativeComponent } = require('react-native');

// requireNativeComponent automatically resolves this to "RCTMapManager"
module.exports = requireNativeComponent('RCTMap', null);
'''
